""" Database models and DDL generation """

from sqlalchemy import (
    MetaData, Table, Column, Integer, String, Numeric, Boolean, DateTime, Date, ForeignKeyConstraint
)
from sqlalchemy.schema import CreateTable
from sqlalchemy.sql import func
import naccbis.Common.utils as utils


convention = {
  "ix": "ix_%(column_0_label)s",
  "uq": "uq_%(table_name)s_%(column_0_name)s",
  "ck": "ck_%(table_name)s_%(constraint_name)s",
  "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
  "pk": "pk_%(table_name)s"
}

metadata = MetaData(naming_convention=convention)


raw_batters_overall = Table(
    "raw_batters_overall", metadata,
    Column("no", Integer),
    Column("name", String(35), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("pa", Integer),
    Column("ab", Integer),
    Column("r", Integer),
    Column("h", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("rbi", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("sb", Integer),
    Column("cs", Integer),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("hbp", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("tb", Integer),
    Column("xbh", Integer),
    Column("gdp", Integer),
    Column("go", Integer),
    Column("fo", Integer),
    Column("go_fo", Numeric),
)

raw_batters_conference = Table(
    "raw_batters_conference", metadata,
    Column("no", Integer),
    Column("name", String(35), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("pa", Integer),
    Column("ab", Integer),
    Column("r", Integer),
    Column("h", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("rbi", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("sb", Integer),
    Column("cs", Integer),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("hbp", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("tb", Integer),
    Column("xbh", Integer),
    Column("gdp", Integer),
    Column("go", Integer),
    Column("fo", Integer),
    Column("go_fo", Numeric),
)

raw_pitchers_overall = Table(
    "raw_pitchers_overall", metadata,
    Column("no", Integer),
    Column("name", String(35), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("gs", Integer),
    Column("w", Integer),
    Column("l", Integer),
    Column("sv", Integer),
    Column("cg", Integer),
    Column("sho", Integer),
    Column("ip", String(20)),
    Column("h", Integer),
    Column("r", Integer),
    Column("er", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("era", Numeric),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("ab", Integer),
    Column("avg", Numeric),
    Column("wp", Integer),
    Column("hbp", Integer),
    Column("bk", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("so_9", Numeric),
)

raw_pitchers_conference = Table(
    "raw_pitchers_conference", metadata,
    Column("no", Integer),
    Column("name", String(35), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("gs", Integer),
    Column("w", Integer),
    Column("l", Integer),
    Column("sv", Integer),
    Column("cg", Integer),
    Column("sho", Integer),
    Column("ip", String(20)),
    Column("h", Integer),
    Column("r", Integer),
    Column("er", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("era", Numeric),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("ab", Integer),
    Column("avg", Numeric),
    Column("wp", Integer),
    Column("hbp", Integer),
    Column("bk", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("so_9", Numeric),
)

raw_game_log_fielding = Table(
    "raw_game_log_fielding", metadata,
    Column("game_num", Integer, primary_key=True),
    Column("date", String(10), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("name", String(30), primary_key=True),
    Column("opponent", String),
    Column("score", String(10)),
    Column("tc", Integer),
    Column("po", Integer),
    Column("a", Integer),
    Column("e", Integer),
    Column("fpct", Numeric),
    Column("dp", Integer),
    Column("sba", Integer),
    Column("cs", Integer),
    Column("cspct", Numeric),
    Column("pb", Integer),
    Column("ci", Integer),
)

raw_game_log_hitting = Table(
    "raw_game_log_hitting", metadata,
    Column("game_num", Integer, primary_key=True),
    Column("date", String(10), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("name", String(30), primary_key=True),
    Column("opponent", String),
    Column("score", String(10)),
    Column("ab", Integer),
    Column("r", Integer),
    Column("h", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("rbi", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("sb", Integer),
    Column("cs", Integer),
    Column("hbp", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("tb", Integer),
    Column("xbh", Integer),
    Column("gdp", Integer),
    Column("go", Integer),
    Column("fo", Integer),
    Column("go_fo", Numeric),
    Column("pa", Integer),
)

raw_game_log_pitching = Table(
    "raw_game_log_pitching", metadata,
    Column("game_num", Integer, primary_key=True),
    Column("date", String(10), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("name", String(30), primary_key=True),
    Column("opponent", String),
    Column("score", String(10)),
    Column("w", Integer),
    Column("l", Integer),
    Column("sv", Integer),
    Column("ip", Numeric),
    Column("h", Integer),
    Column("r", Integer),
    Column("er", Integer),
    Column("era", Numeric),
    Column("bb", Integer),
    Column("so", Integer),
    Column("hr", Integer),
)

name_corrections = Table(
    "name_corrections", metadata,
    Column("uc_fname", String(20), primary_key=True),
    Column("uc_lname", String(20), primary_key=True),
    Column("uc_team", String(5), primary_key=True),
    Column("uc_season", Integer, primary_key=True),
    Column("c_fname", String(20), nullable=False),
    Column("c_lname", String(20), nullable=False),
    Column("type", String(1)),
    Column("submitted", DateTime, server_default=func.now()),
)

nicknames = Table(
    "nicknames", metadata,
    Column("rid", Integer, nullable=False),
    Column("name", String(20), primary_key=True),
    Column("nickname", String(20), primary_key=True),
)

duplicate_names = Table(
    "duplicate_names", metadata,
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("id", Integer, nullable=False),
)

player_id = Table(
    "player_id", metadata,
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("player_id", String(10), nullable=False),
)

batters_overall = Table(
    "batters_overall", metadata,
    Column("no", Integer),
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("pa", Integer),
    Column("ab", Integer),
    Column("r", Integer),
    Column("h", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("rbi", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("hbp", Integer),
    Column("tb", Integer),
    Column("xbh", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("gdp", Integer),
    Column("sb", Integer),
    Column("cs", Integer),
    Column("go", Integer),
    Column("fo", Integer),
    Column("go_fo", Numeric),
    Column("hbp_p", Numeric),
    Column("bb_p", Numeric),
    Column("so_p", Numeric),
    Column("babip", Numeric),
    Column("iso", Numeric),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("ops", Numeric),
    Column("sar", Numeric),
    ForeignKeyConstraint(
        ["fname", "lname", "team", "season"],
        ["player_id.fname", "player_id.lname", "player_id.team", "player_id.season"],
        onupdate="CASCADE", ondelete="CASCADE"
    )
)

batters_conference = Table(
    "batters_conference", metadata,
    Column("no", Integer),
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("pa", Integer),
    Column("ab", Integer),
    Column("r", Integer),
    Column("h", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("rbi", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("hbp", Integer),
    Column("tb", Integer),
    Column("xbh", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("gdp", Integer),
    Column("sb", Integer),
    Column("cs", Integer),
    Column("go", Integer),
    Column("fo", Integer),
    Column("go_fo", Numeric),
    Column("hbp_p", Numeric),
    Column("bb_p", Numeric),
    Column("so_p", Numeric),
    Column("babip", Numeric),
    Column("iso", Numeric),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("ops", Numeric),
    Column("sar", Numeric),
    ForeignKeyConstraint(
        ["fname", "lname", "team", "season"],
        ["player_id.fname", "player_id.lname", "player_id.team", "player_id.season"],
        onupdate="CASCADE", ondelete="CASCADE"
    )
)

pitchers_overall = Table(
    "pitchers_overall", metadata,
    Column("no", Integer),
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("gs", Integer),
    Column("w", Integer),
    Column("l", Integer),
    Column("sv", Integer),
    Column("cg", Integer),
    Column("sho", Integer),
    Column("ip", Numeric),
    Column("h", Integer),
    Column("r", Integer),
    Column("er", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("ab", Integer),
    Column("wp", Integer),
    Column("hbp", Integer),
    Column("bk", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("pa", Integer),
    Column("hbp_p", Numeric),
    Column("bb_p", Numeric),
    Column("so_p", Numeric),
    Column("iso", Numeric),
    Column("babip", Numeric),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("ops", Numeric),
    Column("lob_p", Numeric),
    Column("era", Numeric),
    Column("ra_9", Numeric),
    Column("so_p", Numeric),
    Column("bb_p", Numeric),
    Column("hr_p", Numeric),
    Column("whip", Numeric),
    ForeignKeyConstraint(
        ["fname", "lname", "team", "season"],
        ["player_id.fname", "player_id.lname", "player_id.team", "player_id.season"],
        onupdate="CASCADE", ondelete="CASCADE"
    )
)

pitchers_conference = Table(
    "pitchers_conference", metadata,
    Column("no", Integer),
    Column("fname", String(20), primary_key=True),
    Column("lname", String(20), primary_key=True),
    Column("team", String(5), primary_key=True),
    Column("season", Integer, primary_key=True),
    Column("yr", String(2)),
    Column("pos", String(15)),
    Column("g", Integer),
    Column("gs", Integer),
    Column("w", Integer),
    Column("l", Integer),
    Column("sv", Integer),
    Column("cg", Integer),
    Column("sho", Integer),
    Column("ip", Numeric),
    Column("h", Integer),
    Column("r", Integer),
    Column("er", Integer),
    Column("bb", Integer),
    Column("so", Integer),
    Column("x2b", Integer),
    Column("x3b", Integer),
    Column("hr", Integer),
    Column("ab", Integer),
    Column("wp", Integer),
    Column("hbp", Integer),
    Column("bk", Integer),
    Column("sf", Integer),
    Column("sh", Integer),
    Column("pa", Integer),
    Column("hbp_p", Numeric),
    Column("bb_p", Numeric),
    Column("so_p", Numeric),
    Column("iso", Numeric),
    Column("babip", Numeric),
    Column("avg", Numeric),
    Column("obp", Numeric),
    Column("slg", Numeric),
    Column("ops", Numeric),
    Column("lob_p", Numeric),
    Column("era", Numeric),
    Column("ra_9", Numeric),
    Column("so_p", Numeric),
    Column("bb_p", Numeric),
    Column("hr_p", Numeric),
    Column("whip", Numeric),
    ForeignKeyConstraint(
        ["fname", "lname", "team", "season"],
        ["player_id.fname", "player_id.lname", "player_id.team", "player_id.season"],
        onupdate="CASCADE", ondelete="CASCADE"
    )
)

game_log = Table(
    "game_log", metadata,
    Column("game_num", Integer, primary_key=True),
    Column("date", Date),
    Column("season", Integer, primary_key=True),
    Column("team", String(30), primary_key=True),
    Column("opponent", String(30)),
    Column("result", String(1)),
    Column("rs", Integer),
    Column("ra", Integer),
    Column("home", Boolean),
    Column("conference", Boolean),
)


if __name__ == "__main__":
    config = utils.init_config()
    engine = utils.create_db_engine(config["DB"])
    for table in metadata.sorted_tables:
        print(CreateTable(table).compile(engine))
    metadata.drop_all(engine)
    metadata.create_all(engine)
